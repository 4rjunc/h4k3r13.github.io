import { AnimatableColor } from "../AnimatableColor";
import { AnimatableGradient } from "../Gradients/AnimatableGradient";
import { Collisions } from "./Collisions/Collisions";
import type { Container } from "../../../Core/Container";
import { Destroy } from "./Destroy/Destroy";
import type { Engine } from "../../../engine";
import type { IInteractivity } from "../../Interfaces/Interactivity/IInteractivity";
import type { IOptionLoader } from "../../Interfaces/IOptionLoader";
import type { IParticlesOptions } from "../../Interfaces/Particles/IParticlesOptions";
import { Links } from "./Links/Links";
import { Move } from "./Move/Move";
import { Opacity } from "./Opacity/Opacity";
import { ParticlesBounce } from "./Bounce/ParticlesBounce";
import type { ParticlesGroups } from "../../../Types/ParticlesGroups";
import { ParticlesNumber } from "./Number/ParticlesNumber";
import { ParticlesRepulse } from "./Repulse/ParticlesRepulse";
import type { RecursivePartial } from "../../../Types/RecursivePartial";
import { Rotate } from "./Rotate/Rotate";
import { Shadow } from "./Shadow";
import { Shape } from "./Shape/Shape";
import type { SingleOrMultiple } from "../../../Types/SingleOrMultiple";
import { Size } from "./Size/Size";
import { Stroke } from "./Stroke";
import { ZIndex } from "./ZIndex/ZIndex";
export declare class ParticlesOptions implements IParticlesOptions, IOptionLoader<IParticlesOptions> {
    #private;
    bounce: ParticlesBounce;
    collisions: Collisions;
    color: AnimatableColor;
    destroy: Destroy;
    gradient: SingleOrMultiple<AnimatableGradient>;
    groups: ParticlesGroups;
    interactivity?: RecursivePartial<IInteractivity>;
    links: Links;
    move: Move;
    number: ParticlesNumber;
    opacity: Opacity;
    reduceDuplicates: boolean;
    repulse: ParticlesRepulse;
    rotate: Rotate;
    shape: Shape;
    size: Size;
    shadow: Shadow;
    stroke: SingleOrMultiple<Stroke>;
    zIndex: ZIndex;
    get line_linked(): Links;
    set line_linked(value: Links);
    get lineLinked(): Links;
    set lineLinked(value: Links);
    [name: string]: unknown;
    constructor(engine: Engine, container?: Container);
    load(data?: RecursivePartial<IParticlesOptions>): void;
}
