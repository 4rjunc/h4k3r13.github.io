import { IParticlesOptions, ParticlesOptions, RecursivePartial } from "tsparticles-engine";
import type { Container, IDelta, IParticleUpdater, Particle } from "tsparticles-engine";
import { ITilt } from "./Options/Interfaces/ITilt";
import { Tilt } from "./Options/Classes/Tilt";
declare type TiltParticle = Particle & {
    options: TiltParticlesOptions;
};
declare type ITiltParticlesOptions = IParticlesOptions & {
    tilt?: ITilt;
};
declare type TiltParticlesOptions = ParticlesOptions & {
    tilt?: Tilt;
};
export declare class TiltUpdater implements IParticleUpdater {
    private readonly container;
    constructor(container: Container);
    init(particle: TiltParticle): void;
    isEnabled(particle: TiltParticle): boolean;
    update(particle: Particle, delta: IDelta): void;
    loadOptions(options: TiltParticlesOptions, ...sources: (RecursivePartial<ITiltParticlesOptions> | undefined)[]): void;
}
export {};
